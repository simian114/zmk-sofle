#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&gresc      &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6   &kp N7  &kp N8         &kp N9           &kp N0      &kp GRAVE
&lt 3 TAB   &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y    &kp U   &kp I          &kp O            &kp P       &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H    &kp J   &kp K          &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N    &kp M   &kp COMMA      &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp RET  &mo 2   &kp BACKSPACE  &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1         &kp F2          &kp F3                &kp F4                 &kp F5           &mmv MOVE_UP     &kp F6     &kp F7    &kp F8      &kp F9     &kp F10           &trans
&trans      &kp MINUS      &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LG(MINUS)    &mmv MOVE_DOWN   &kp F11    &kp F11   &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp EQUAL      &kp PLUS        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LG(EQUAL)    &mmv MOVE_LEFT   &kp PG_UP  &kp LEFT  &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &kp LG(MINUS)  &kp LG(PLUS)    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans           &mmv MOVE_RIGHT  &kp PG_DN  &trans    &kp INSERT  &kp END    &trans            &trans
&kp C_MUTE  &trans         &trans          &trans                &trans                 &trans           &mkp LCLK        &trans     &trans    &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6              &kp F7                  &kp F8          &kp F9                   &kp F10              &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mmv MOVE_DOWN   &kp HOME            &kp LS(LG(LEFT_ARROW))  &kp UP_ARROW    &kp LS(LG(RIGHT_ARROW))  &kp END              &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LG(LEFT_ARROW)  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp LG(RIGHT_ARROW)  &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mmv MOVE_RIGHT  &kp LG(LEFT_ARROW)  &kp LS(LA(LEFT_ARROW))  &trans          &kp LS(LA(RIGHT_ARROW))  &kp LA(RIGHT_ARROW)  &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mkp LCLK        &trans              &trans                  &trans          &trans                   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans            &trans    &trans             &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &kp LS(LG(LEFT))  &kp UP    &kp LS(LG(RIGHT))  &kp LA(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LEFT)  &kp LEFT          &kp DOWN  &kp RIGHT          &kp LG(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans            &trans    &trans             &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans            &trans    &trans             &trans
            >;
        };
    };
};
